package com.drownedinsound.data.generatered;

import com.drownedinsound.data.generatered.DaoSession;
import de.greenrobot.dao.DaoException;

// THIS CODE IS GENERATED BY greenDAO, EDIT ONLY INSIDE THE "KEEP"-SECTIONS

// KEEP INCLUDES - put your custom includes here

import com.drownedinsound.data.model.BoardPostCommentTreeNode;
// KEEP INCLUDES END
/**
 * Entity mapped to table "BOARD_POST_COMMENT".
 */
public class BoardPostComment {

    private String commentID;
    private String title;
    private String content;
    private String authorUsername;
    private String replyToUsername;
    private String usersWhoHaveThissed;
    private String dateAndTime;
    private Integer commentLevel;
    private String boardPostID;

    /** Used to resolve relations */
    private transient DaoSession daoSession;

    /** Used for active entity operations. */
    private transient BoardPostCommentDao myDao;

    private BoardPost boardPost;
    private String boardPost__resolvedKey;


    // KEEP FIELDS - put your custom fields here
    private boolean actionSectionVisible;

    private BoardPostCommentTreeNode treeNode;

    private boolean doHighlightedAnimation;
    // KEEP FIELDS END

    public BoardPostComment() {
    }

    public BoardPostComment(String commentID) {
        this.commentID = commentID;
    }

    public BoardPostComment(String commentID, String title, String content, String authorUsername, String replyToUsername, String usersWhoHaveThissed, String dateAndTime, Integer commentLevel, String boardPostID) {
        this.commentID = commentID;
        this.title = title;
        this.content = content;
        this.authorUsername = authorUsername;
        this.replyToUsername = replyToUsername;
        this.usersWhoHaveThissed = usersWhoHaveThissed;
        this.dateAndTime = dateAndTime;
        this.commentLevel = commentLevel;
        this.boardPostID = boardPostID;
    }

    /** called by internal mechanisms, do not call yourself. */
    public void __setDaoSession(DaoSession daoSession) {
        this.daoSession = daoSession;
        myDao = daoSession != null ? daoSession.getBoardPostCommentDao() : null;
    }

    public String getCommentID() {
        return commentID;
    }

    public void setCommentID(String commentID) {
        this.commentID = commentID;
    }

    public String getTitle() {
        return title;
    }

    public void setTitle(String title) {
        this.title = title;
    }

    public String getContent() {
        return content;
    }

    public void setContent(String content) {
        this.content = content;
    }

    public String getAuthorUsername() {
        return authorUsername;
    }

    public void setAuthorUsername(String authorUsername) {
        this.authorUsername = authorUsername;
    }

    public String getReplyToUsername() {
        return replyToUsername;
    }

    public void setReplyToUsername(String replyToUsername) {
        this.replyToUsername = replyToUsername;
    }

    public String getUsersWhoHaveThissed() {
        return usersWhoHaveThissed;
    }

    public void setUsersWhoHaveThissed(String usersWhoHaveThissed) {
        this.usersWhoHaveThissed = usersWhoHaveThissed;
    }

    public String getDateAndTime() {
        return dateAndTime;
    }

    public void setDateAndTime(String dateAndTime) {
        this.dateAndTime = dateAndTime;
    }

    public Integer getCommentLevel() {
        return commentLevel;
    }

    public void setCommentLevel(Integer commentLevel) {
        this.commentLevel = commentLevel;
    }

    public String getBoardPostID() {
        return boardPostID;
    }

    public void setBoardPostID(String boardPostID) {
        this.boardPostID = boardPostID;
    }

    /** To-one relationship, resolved on first access. */
    public BoardPost getBoardPost() {
        String __key = this.boardPostID;
        if (boardPost__resolvedKey == null || boardPost__resolvedKey != __key) {
            if (daoSession == null) {
                throw new DaoException("Entity is detached from DAO context");
            }
            BoardPostDao targetDao = daoSession.getBoardPostDao();
            BoardPost boardPostNew = targetDao.load(__key);
            synchronized (this) {
                boardPost = boardPostNew;
            	boardPost__resolvedKey = __key;
            }
        }
        return boardPost;
    }

    public void setBoardPost(BoardPost boardPost) {
        synchronized (this) {
            this.boardPost = boardPost;
            boardPostID = boardPost == null ? null : boardPost.getBoardPostID();
            boardPost__resolvedKey = boardPostID;
        }
    }

    /** Convenient call for {@link AbstractDao#delete(Object)}. Entity must attached to an entity context. */
    public void delete() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }    
        myDao.delete(this);
    }

    /** Convenient call for {@link AbstractDao#update(Object)}. Entity must attached to an entity context. */
    public void update() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }    
        myDao.update(this);
    }

    /** Convenient call for {@link AbstractDao#refresh(Object)}. Entity must attached to an entity context. */
    public void refresh() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }    
        myDao.refresh(this);
    }

    // KEEP METHODS - put your custom methods here

    public boolean isActionSectionVisible() {
        return actionSectionVisible;
    }

    public void setActionSectionVisible(boolean actionSectionVisible) {
        this.actionSectionVisible = actionSectionVisible;
    }

    public void setDoHighlightedAnimation(boolean doHighlightedAnimation) {
        this.doHighlightedAnimation = doHighlightedAnimation;
    }

    public boolean isDoHighlightedAnimation() {
        return doHighlightedAnimation;
    }

    public BoardPostCommentTreeNode getTreeNode() {
        return treeNode;
    }

    public void setTreeNode(BoardPostCommentTreeNode treeNode) {
        this.treeNode = treeNode;
    }
    // KEEP METHODS END

}
